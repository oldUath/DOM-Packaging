{"version":3,"sources":["main.js"],"names":["div","dom","create","console","log","div1","append","test","newParent","wrap","nodes","empty","window","attr","at","style","border","color","class","add","test01","has","fn","alert","on","off","testDiv","find","test02","s2","siblings","next","previous","t","fn2","n","each","children","index","s3"],"mappings":";AAAA,IAAMA,EAAMC,IAAIC,OAAO,2CACvBC,QAAQC,IAAIJ,GAGZ,IAAMK,EAAOJ,IAAIC,OAAO,sBAGxBD,IAAIK,OAAOC,KAAMF,GAEjB,IAAMG,EAAYP,IAAIC,OAAO,wBAC7BD,IAAIQ,KAAKF,KAAMC,GAEf,IAAME,EAAQT,IAAIU,MAAMC,OAAOD,OAC/BR,QAAQC,IAAIM,GAGZT,IAAIY,KAAKC,GAAI,QAAS,OACtBX,QAAQC,IAAIH,IAAIY,KAAKC,GAAI,UAGzBb,IAAIc,MAAMR,KAAM,CAAES,OAAQ,gBAAiBC,MAAO,SAGlDhB,IAAIiB,MAAMC,IAAIC,OAAQ,OAEtBjB,QAAQC,IAAIH,IAAIiB,MAAMG,IAAID,OAAQ,QAGlC,IAAME,EAAK,WACPC,MAAM,QAEVtB,IAAIuB,GAAGJ,OAAQ,QAASE,GACxBrB,IAAIwB,IAAIL,OAAQ,QAASE,GAGzB,IAAMI,EAAUzB,IAAI0B,KAAK,OAAQC,QAAQ,GACzCzB,QAAQC,IAAIsB,GAGZvB,QAAQC,IAAI,sBACZ,IAAIyB,EAAK5B,IAAI0B,KAAK,eAAe,GACjCxB,QAAQC,IAAIH,IAAI6B,SAASD,IAGzB1B,QAAQC,IAAIH,IAAI8B,KAAKF,IACrB1B,QAAQC,IAAIH,IAAI+B,SAASH,IAGzB,IAAMI,EAAIhC,IAAI0B,KAAK,UAAU,GACvBO,EAAM,SAACC,GACTlC,IAAIc,MAAMoB,EAAG,QAAS,QAE1BlC,IAAImC,KAAKnC,IAAIoC,SAASJ,GAAIC,GAG1B/B,QAAQC,IAAIH,IAAIqC,MAAMC","file":"main.6e01fc31.js","sourceRoot":"..\\src","sourcesContent":["const div = dom.create('<div><span><i>直接插入一个节点</i></span></div>');\r\nconsole.log(div)\r\n\r\n// 在test节点后面插入一个节点\r\nconst div1 = dom.create('<div>newdiv1</div>');\r\n// dom.after(test, div1);\r\n// dom.before(test, div1);\r\ndom.append(test, div1);\r\n\r\nconst newParent = dom.create('<div>newParent</div>');\r\ndom.wrap(test, newParent)\r\n\r\nconst nodes = dom.empty(window.empty)\r\nconsole.log(nodes)\r\n\r\n//修改属性,两个参数是获取属性，三个是修改\r\ndom.attr(at, 'title', 'bbb')\r\nconsole.log(dom.attr(at, 'title'))\r\n\r\n//修改属性\r\ndom.style(test, { border: '1px solid red', color: 'blue' })\r\n\r\n//添加class名,has判断有没有此类名\r\ndom.class.add(test01, 'red')\r\n// dom.class.remove(test01, 'red')\r\nconsole.log(dom.class.has(test01, 'red'))\r\n\r\n//点击事件\r\nconst fn = () => {\r\n    alert(\"点击了\")\r\n}\r\ndom.on(test01, 'click', fn)\r\ndom.off(test01, 'click', fn)\r\n\r\n//查找元素 test02是范围，如果没有则认为是全局查找\r\nconst testDiv = dom.find('.red', test02)[0]\r\nconsole.log(testDiv)\r\n\r\n//查找兄弟\r\nconsole.log('------------------')\r\nlet s2 = dom.find('#test04>#s2')[0]\r\nconsole.log(dom.siblings(s2))\r\n\r\n//上一个节点和下一个节点\r\nconsole.log(dom.next(s2))\r\nconsole.log(dom.previous(s2))\r\n\r\n//遍历所有节点\r\nconst t = dom.find('#trval')[0]\r\nconst fn2 = (n) => {\r\n    dom.style(n, 'color', 'red')\r\n}\r\ndom.each(dom.children(t), fn2)\r\n\r\n//排名第几,从0开始\r\nconsole.log(dom.index(s3))\r\n"]}